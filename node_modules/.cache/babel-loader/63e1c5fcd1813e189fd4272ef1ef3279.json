{"ast":null,"code":"var _jsxFileName = \"/Users/alexsze/Desktop/React_NetNinja/5_tododashboard/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootreducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport fbConfig from './config/fbConfig';\nconst store = createStore(rootReducer, initialState, compose(reduxFirestore(firebase)) // compose(\n//   applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),    \n//   reactReduxFirebase(fbConfig), // redux binding for firebase\n//   reduxFirestore(fbConfig), // redux bindings for firestore\n// )\n);\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance // <- needed if using firestore\n\n};\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }\n})))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/alexsze/Desktop/React_NetNinja/5_tododashboard/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","compose","rootReducer","Provider","thunk","ReactReduxFirebaseProvider","createFirestoreInstance","fbConfig","store","initialState","reduxFirestore","firebase","rrfProps","config","rrfConfig","dispatch","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,0BAAT,QAA2C,sBAA3C;AACA,SAASC,uBAAT,QAAwC,iBAAxC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,MAAMC,KAAK,GAAGT,WAAW,CACvBG,WADuB,EAEvBO,YAFuB,EAGvBR,OAAO,CAACS,cAAc,CAACC,QAAD,CAAf,CAHgB,CAIvB;AACA;AACA;AACA;AACA;AARuB,CAAzB;AAWA,MAAMC,QAAQ,GAAG;AACbD,EAAAA,QADa;AAEbE,EAAAA,MAAM,EAAEC,SAFK;AAGbC,EAAAA,QAAQ,EAAEP,KAAK,CAACO,QAHH;AAIbT,EAAAA,uBAJa,CAIW;;AAJX,CAAjB;AAOAV,QAAQ,CAACoB,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAER,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,0BAAD,oBAAgCI,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF,EAQEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AACA;;AACApB,aAAa,CAACqB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './store/reducers/rootreducer';\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport { createFirestoreInstance } from 'redux-firestore'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(\n  rootReducer, \n  initialState,\n  compose(reduxFirestore(firebase))\n  // compose(\n  //   applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),    \n  //   reactReduxFirebase(fbConfig), // redux binding for firebase\n  //   reduxFirestore(fbConfig), // redux bindings for firestore\n  // )\n);\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance // <- needed if using firestore\n  }\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}