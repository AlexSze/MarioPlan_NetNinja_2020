{"ast":null,"code":"var _jsxFileName = \"/Users/alexsze/Desktop/React_NetNinja/5_tododashboard/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; //import * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootreducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), // redux bindings for firestore\nreduxFirestore(fbConfig) // redux bindings for firestore\n) // compose(\n//   applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),    \n//   reactReduxFirebase(fbConfig), // redux binding for firebase\n//   reduxFirestore(fbConfig), // redux bindings for firestore\n// )\n);\nconst rffProps = {\n  firebase,\n  config: {},\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rffProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }\n})))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();","map":{"version":3,"sources":["/Users/alexsze/Desktop/React_NetNinja/5_tododashboard/src/index.js"],"names":["React","ReactDOM","App","createStore","applyMiddleware","compose","rootReducer","Provider","thunk","createFirestoreInstance","reduxFirestore","getFirestore","ReactReduxFirebaseProvider","reactReduxFirebase","getFirebase","fbConfig","firebase","store","withExtraArgument","rffProps","config","dispatch","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CACA;;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,uBAAT,EAAkCC,cAAlC,EAAkDC,YAAlD,QAAsE,iBAAtE;AACA,SAASC,0BAAT,EAAqCC,kBAArC,EAAyDC,WAAzD,QAA4E,sBAA5E;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,cAArB;AAEA,MAAMC,KAAK,GAAGd,WAAW,CACvBG,WADuB,EAEvBD,OAAO,CACLD,eAAe,CAACI,KAAK,CAACU,iBAAN,CAAwB;AAACJ,EAAAA,WAAD;AAAaH,EAAAA;AAAb,CAAxB,CAAD,CADV,EACiE;AACtED,cAAc,CAACK,QAAD,CAFT,CAEqB;AAFrB,CAFgB,CAMvB;AACA;AACA;AACA;AACA;AAVuB,CAAzB;AAaA,MAAMI,QAAQ,GAAG;AACfH,EAAAA,QADe;AAEfI,EAAAA,MAAM,EAAE,EAFO;AAGfC,EAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAHD;AAIfZ,EAAAA;AAJe,CAAjB;AAOAR,QAAQ,CAACqB,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,0BAAD,oBAAgCE,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF,EAQEI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './store/reducers/rootreducer';\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\n\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n\nconst store = createStore(\n  rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})), // redux bindings for firestore\n    reduxFirestore(fbConfig), // redux bindings for firestore\n  )\n  // compose(\n  //   applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),    \n  //   reactReduxFirebase(fbConfig), // redux binding for firebase\n  //   reduxFirestore(fbConfig), // redux bindings for firestore\n  // )\n);\n\nconst rffProps = {\n  firebase, \n  config: {},\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rffProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}