{"version":3,"sources":["components/layout/SignInLinks.js","store/actions/authActions.js","components/layout/SignOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notification.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","store/reducers/authreducer.js","store/reducers/projectreducer.js","store/reducers/rootreducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","isLoaded","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","toString","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Notification","Component","compose","firestoreConnect","collection","orderBy","limit","firestore","ordered","ownProps","match","params","data","SignIn","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","onSubmit","htmlFor","onChange","authError","creds","credentials","signInWithEmailAndPassword","email","password","catch","err","SignUp","signUp","newUser","createUserWithEmailAndPassword","resp","doc","set","firstName","lastName","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","initstate","authreducer","action","console","log","message","projectreducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirestore","reduxFirestore","fbConfig","rffProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0a313c3.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props)=>{\n    return(\n        <ul className='right'>\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      signOut: () => dispatch(signOut())\n    }\n  }\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n      const firebase = getFirebase();\n      \n      firebase.auth().signInWithEmailAndPassword(\n        credentials.email,\n        credentials.password\n      ).then(() => {\n        dispatch({ type: 'LOGIN_SUCCESS' });\n      }).catch((err) => {\n        dispatch({ type: 'LOGIN_ERROR', err });\n      });\n  \n    }\n  }\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    const firestore = getFirebase().firestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email, \n      newUser.password\n    ).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  }\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom'\n\nconst SignedOutLinks = ()=>{\n    return(\n        <ul className='right'>\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\n            <li><NavLink to='/signin'>Log In</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport SignedInLinks from './SignInLinks'\nimport SignedOutLinks from './SignOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props)=>{\n    const {auth, profile} = props;\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />;\n    // console.log(auth)\n    \n    return(\n        <nav className=\"navbar-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className='brand-logo'>Matio Plan</Link>\n                {auth.isLoaded &&  links }\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return{\n      auth: state.firebase.auth,\n      profile: state.firebase.profile,\n    }\n  }\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return (\n      <div className=\"card z-depth-0 project-summary\">\n        <div className=\"card-content grey-text text-darken-3\">\n          <span className=\"card-title \">{project.title}</span>\n            <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n            <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\n        </div>\n      </div>\n    )\n  }\n  \n  export default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport {Link} from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n    return (\n        <div className=\"project-list section\">\n          {projects && projects.map(project=>{\n            return (\n              <Link to={'/project/'+project.id} key={project.id}>\n                <ProjectSummary project={project}  />\n              </Link>\n            )\n          })}          \n        </div>\n      )\n}\n\nexport default ProjectList","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const {notifications} = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            {notifications && notifications.map(item => {\n              return <li key={item.id}>\n                <span className=\"pink-text\">{item.user} </span>\n                <span>{item.content}</span>\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n            </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications","import React, { Component } from 'react'\nimport ProjectList from '../projects/ProjectList'\nimport Notifications from './Notification'\nimport {connect} from 'react-redux'\n\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport {Redirect} from 'react-router-dom'\n\nclass Dashboard extends Component {\n  render() {\n    const {projects, auth, notifications}=this.props;\n    if (!auth.uid) return <Redirect to= '/Signin' />\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects}/>\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapstatetoprop=(state)=>{\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications,\n  }\n}\n\nexport default compose(\n  firestoreConnect(() => [\n    { collection: 'projects', orderBy: ['createdAt', 'desc']},\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}  \n  ]),\n  connect(mapstatetoprop)\n)(Dashboard)","import React from 'react'\nimport { compose } from 'redux';\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n    const { project, auth} = props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n\n    if (project) {\n      return (\n        <div className=\"container section project-details\">\n          <div className=\"card z-depth-0\">\n            <div className=\"card-content\">\n              <span className=\"card-title\">{project.title}</span>\n              <p>{project.content}</p>\n            </div>\n            <div className=\"card-action grey lighten-4 grey-text\">\n              <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n              <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"container center\">\n          <p>Loading project...</p>\n        </div>\n      )\n    }\n  }\n  \n  const mapStateToProps = (state, ownProps) => {\n    // console.log(state);\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null\n    return {\n      project: project,\n      auth: state.firebase.auth,\n    }\n  }\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect(() => ['projects']),\n    )(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n    state={\n        'email':'',\n        'password':'',\n    }\n    handleChange=(e)=>{\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        this.props.signIn(this.state)\n    }\n    render() {\n        const {auth} = this.props;\n        if (auth.uid) return <Redirect to='/' /> \n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">\n                        Sign In\n                    </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type='email' id='email' onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type='password' id='password' onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">\n                            Login\n                        </button>\n                        <div className=\"center red-text\">\n                            { this.props.authError ? <p>{this.props.authError}</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n      authError: state.auth.authError,\n      auth: state.firebase.auth,\n    }\n  }\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n      signIn: (creds) => dispatch(signIn(creds))\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport {signUp} from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state={\n        'email':'',\n        'password':'',\n        'firstName': '',\n        'lastName': '',\n    }\n    handleChange=(e)=>{\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n    render() {\n        const { auth, authError} = this.props;\n        if (auth.uid) return <Redirect to='/' /> \n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">\n                        Sign Up\n                    </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type='email' id='email' onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type='password' id='password' onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type='text' id='firstName' onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type='text' id='lastName' onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">\n                            Sign Up\n                        </button>\n                        <div className=\"center red-text\">\n                            { this.props.authError ? <p>{this.props.authError}</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n      authError: state.auth.authError,\n      auth: state.firebase.auth,\n    }\n  }\n  \n\nconst mapDispatchToProps = dispatch => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {createProject} from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createProject(this.state)\n    this.props.history.push('/')\n  }\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\n          <div className=\"input-field\">\n            <input type=\"text\" id='title' onChange={this.handleChange} />\n            <label htmlFor=\"title\">Project Title</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n            <label htmlFor=\"content\">Project Content</label>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\n\nexport default connect( mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\n    return (dispatch, getState, {getFirebase}) => {\n      // make async call to database\n      const firestore = getFirebase().firestore();\n      const profile = getState().firebase.profile;\n      const authorId = getState().firebase.auth.uid;\n\n      firestore.collection('projects').add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date()\n      }).then(()=>{\n        dispatch({ type: 'CREATE_PROJECT', project });\n      }).catch((err)=>{\n        dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n      })\n\n      \n    }\n  };","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'; \nimport Navbar from './components/layout/Navbar.js'\nimport Dashboard from './components/dashboard/Dashboard.js';\nimport ProjectDetails from './components/projects/ProjectDetails.js';\nimport SignIn from './components/auth/SignIn.js';\nimport SignUp from './components/auth/SignUp.js';\nimport CreateProject from './components/projects/CreateProject.js';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const initstate = {\n    authError: null\n  }\n  \n\nconst authreducer = (state=initstate, action)=>{\n    switch(action.type){\n        case 'LOGIN_ERROR':\n          console.log('login error');\n          return {\n            ...state,\n            authError: 'Login failed'\n          }\n        case 'LOGIN_SUCCESS':\n          console.log('login success');\n          return {\n              authError: null\n          }\n        case 'SIGNOUT_SUCCESS':\n          console.log('signout success');\n          return state\n\n        case 'SIGNUP_SUCCESS':\n          console.log('signup success')\n          return {\n            ...state,\n            authError: null\n          }\n        case 'SIGNUP_ERROR':\n          console.log(action.err.message)\n          return {\n            ...state,\n            authError: action.err.message\n          }\n        default:\n          return state\n      }\n}\n\nexport default authreducer","const initstate = {\n    projects: [\n      ]\n}\n\nconst projectreducer = (state=initstate, action)=>{\n    switch(action.type){\n        case 'CREATE_PROJECT':\n            console.log('create project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log(action.err);\n            return state;\n\n        default:\n            return state;\n    }\n}\n\nexport default projectreducer","import {combineReducers} from 'redux';\nimport authreducer from './authreducer';\nimport projectreducer from './projectreducer';\nimport {firestoreReducer} from 'redux-firestore';\nimport {firebaseReducer} from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authreducer,\n    project: projectreducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer","import firebase from 'firebase/app';\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDu-Aa2hvMylFcrISdOxlIvme6MqnQxdLo\",\n    authDomain: \"marioplan-e4135.firebaseapp.com\",\n    databaseURL: \"https://marioplan-e4135.firebaseio.com\",\n    projectId: \"marioplan-e4135\",\n    storageBucket: \"marioplan-e4135.appspot.com\",\n    messagingSenderId: \"647013726243\",\n    appId: \"1:647013726243:web:dd6af0f3b1583aafb75996\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n//   firebase.firestore().settings({ timestampsInSnapshots: true });\n\n  export default firebaseConfig","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './store/reducers/rootreducer';\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\n\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n\n//for render on auth ready\nimport { useSelector } from \"react-redux\";\nimport { isLoaded } from \"react-redux-firebase\";\n\n// const store = createStore(\n//   rootReducer, \n//   compose(\n//     applyMiddleware(thunk.withExtraArgument({getFirebase})), // redux bindings for firestore\n//   )\n//   // compose(\n//   //   applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),    \n//   //   reactReduxFirebase(fbConfig), // redux binding for firebase\n//   //   reduxFirestore(fbConfig), // redux bindings for firestore\n//   // )\n// );\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\nconst profileSpecificProps = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false,\n};\n\nconst rffProps = {\n  firebase, \n  config: fbConfig && profileSpecificProps, //important!\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth))\n    return (\n      <div className=\"center\">\n        {\" \"}\n        <p>Loading...</p>\n      </div>\n    );\n  return children;\n}\n\nReactDOM.render(\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rffProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}